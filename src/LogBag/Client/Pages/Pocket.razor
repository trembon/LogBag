@page "/pocket/view/{pocketName}"
@using System.Net.Http.Json
@inject HttpClient httpClient

<PageTitle>View Pocket - @PocketName</PageTitle>

@code {
    [Parameter]
    public string? PocketName { get; set; }

    private PocketMetadataResponse? Metadata;

    protected override async Task OnInitializedAsync()
    {
        Metadata = await httpClient.GetFromJsonAsync<PocketMetadataResponse>($"pockets/{PocketName}");
    }

    private async Task<TableData<LogRowResponse>> GetLogsData(TableState state)
    {
        var pageNumber = state.Page == 0 ? 1 : state.Page;
        var url = $"logs/{PocketName}?page={pageNumber}&pageSize={state.PageSize}";

        var response = await httpClient.GetFromJsonAsync<List<LogRowResponse>>(url);

        return new TableData<LogRowResponse>
        {
            TotalItems = (int?)Metadata?.TotalLogCount ?? 0,
            Items = response ?? Enumerable.Empty<LogRowResponse>()
        };
    }
}

<h1 class="mb-5">Pocket - @PocketName</h1>

<MudTable T="LogRowResponse" Hover="true" LoadingProgressColor="Color.Info" ServerData="GetLogsData">
    <HeaderContent>
        <MudTh>Timestamp</MudTh>
        @if (Metadata is not null)
        {
            foreach (var column in Metadata.Columns)
            {
                <MudTh>@column
                </MudTh>
            }

        }
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Timestamp">@context.Timestamp.ToString("u")</MudTd>
        @if (Metadata is not null)
        {
            foreach (var column in Metadata.Columns)
            {
                <MudTd DataLabel="@column">@context.Data[column]</MudTd>
            }
        }
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>